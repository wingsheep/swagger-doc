{
  "publisher": "wingsheep",
  "name": "swagger-doc",
  "displayName": "swagger-doc",
  "version": "0.0.1",
  "private": true,
  "packageManager": "pnpm@7.18.1",
  "description": "",
  "author": "Wingsheep <1306750238@qq.com>",
  "license": "MIT",
  "funding": "https://github.com/sponsors/wingsheep",
  "homepage": "https://github.com/wingsheep/vscode-doc",
  "repository": {
    "type": "git",
    "url": "https://github.com/wingsheep/vscode-doc"
  },
  "bugs": {
    "url": "https://github.com/wingsheep/vscode-doc/issues"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/wingsheep"
  },
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "icon": "resources/icon.png",
  "files": [
    "dist"
  ],
  "engines": {
    "vscode": "^1.69.0"
  },
  "activationEvents": [],
  "contributes": {
    "viewsWelcome": [
      {
        "view": "swaggerTag",
        "contents": "No data yet. \n You can add a new project or select an existing project \n[Add](command:swaggerManager.add) \n [Select](command:swaggerManager.search)"
      },
      {
        "view": "swaggerManager",
        "contents": "No data yet. \n You can add a new project \n[Add](command:swaggerManager.add)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "swaggerDoc",
          "title": "Swagger Doc",
          "icon": "resources/logo.svg"
        }
      ]
    },
    "views": {
      "swaggerDoc": [
        {
          "id": "swaggerTag",
          "name": "SwaggerTag"
        },
        {
          "id": "swaggerManager",
          "name": "Doc manager"
        }
      ]
    },
    "commands": [
      {
        "command": "swaggerTag.loadDocData",
        "title": "Load swagger json",
        "category": "SwaggerTag"
      },
      {
        "command": "swaggerTag.refresh",
        "title": "Refresh swagger json",
        "category": "SwaggerTag",
        "icon": "$(refresh)"
      },
      {
        "command": "swaggerTag.preview",
        "title": "Preview swagger doc",
        "category": "SwaggerTag"
      },
      {
        "command": "swaggerTag.doRefactor",
        "title": "Do some refactoring",
        "category": "SwaggerTag"
      },
      {
        "command": "swaggerManager.refresh",
        "title": "Refresh List",
        "category": "swaggerManager",
        "icon": "$(refresh)"
      },
      {
        "command": "swaggerManager.open",
        "title": "Open swagger manager file",
        "category": "swaggerManager",
        "icon": "$(book)"
      },
      {
        "command": "swaggerManager.search",
        "title": "Search swagger",
        "category": "swaggerManager",
        "icon": "$(search)"
      },
      {
        "command": "swaggerManager.add",
        "title": "Add swagger",
        "category": "swaggerManager",
        "icon": "$(add)"
      },
      {
        "command": "swaggerManager.edit",
        "title": "Edit swagger",
        "category": "swaggerManager",
        "icon": "$(edit)"
      },
      {
        "command": "swaggerManager.delete",
        "title": "Delete swagger",
        "category": "swaggerManager",
        "icon": "$(remove)"
      },
      {
        "command": "swaggerManager.toggle",
        "title": "Toggle swagger",
        "category": "swaggerManager"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "swaggerTag.refresh",
          "when": "view == swaggerTag",
          "group": "navigation"
        },
        {
          "command": "swaggerManager.add",
          "when": "view == swaggerManager",
          "group": "navigation"
        },
        {
          "command": "swaggerManager.search",
          "when": "view == swaggerManager",
          "group": "navigation"
        },
        {
          "command": "swaggerManager.open",
          "when": "view == swaggerManager",
          "group": "navigation"
        },
        {
          "command": "swaggerManager.refresh",
          "when": "view == swaggerManager",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "swaggerManager.edit",
          "when": "view == swaggerManager",
          "group": "inline"
        },
        {
          "command": "swaggerManager.delete",
          "when": "view == swaggerManager",
          "group": "inline"
        }
      ]
    },
    "css": [
      "styles/treeview.css"
    ]
  },
  "workspaces": [
    "webview-ui",
    "backend"
  ],
  "scripts": {
    "watch": "pnpm -C webview-ui watch",
    "server": "pnpm -C backend server",
    "build": "tsup src/extension.ts --external vscode",
    "dev": "nr build --watch",
    "lint": "eslint .",
    "vscode:prepublish": "nr build",
    "publish": "vsce publish --no-dependencies",
    "pack": "vsce package --no-dependencies",
    "test": "vitest",
    "typecheck": "tsc --noEmit",
    "release": "bumpp && nr publish"
  },
  "dependencies": {
    "@apidevtools/swagger-parser": "^10.1.0",
    "axios": "^1.3.4",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^0.25.2",
    "@antfu/ni": "^0.17.2",
    "@types/node": "^18.6.4",
    "@types/vscode": "^1.69.0",
    "bumpp": "^8.2.1",
    "eslint": "^8.21.0",
    "esno": "^0.16.3",
    "openapi-types": "^12.1.0",
    "pnpm": "^7.8.0",
    "rimraf": "^3.0.2",
    "tsup": "^6.2.1",
    "typescript": "^4.7.4",
    "vite": "^3.0.4",
    "vitest": "^0.21.0",
    "vsce": "^2.10.0"
  }
}
